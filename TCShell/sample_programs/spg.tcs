type BikePath = LandPath
type PhysicalBikeSpace = physical mutable OpenSpace
type Bike = physical mutable mobile SmartEntity

var Main = fn () {
  var bikePath = new BikePath("bikePath1")
  var bikePathStart
    = new PhysicalBikeSpace(Location {0, 0}, 10, "Start")
  var bikePathEnd
    = new PhysicalBikeSpace(Location {10, 10}, 10, "End")
  var bike = new Bike()
  var bikeSPG
    = new SpacePathGraph(bikePathStart)

  bikePathStart.addEntities([(Entity) bike])

  print(bikePathStart.getEntities())
  print(bikePathEnd.getEntities())

  match bikeSPG.addPathSpace((Path) bikePath, (Space) bikePathEnd) {
    var s: string => {
      print(s)
      return
    }
    var v: void => {
      print(bikeSPG.getStructJSON())
    }
  }
  print(bikePath.getReachableSpaces())
  var bikePathSeg1 = bikeSPG.splitPath((Path) bikePath)

  print(bikeSPG.getStructJSON())

  print(bikePath.getReachableSpaces())
}


Main()
